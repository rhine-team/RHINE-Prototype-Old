syntax = "proto3";

package aggregator;

option go_package = "github.com/rhine-team/RHINE-Prototype/offlineAuth/components/aggregator";

// Service offered by the aggregator
service AggService {
  rpc DSRetrieval (RetrieveDSALogRequest) returns (RetrieveDSALogResponse) {}

  rpc SubmitNDS (SubmitNDSRequest) returns (SubmitNDSResponse) {}

  rpc PreLogging (PreLoggingRequest) returns (PreLoggingResponse) {}

  rpc Logging (LoggingRequest) returns (LoggingResponse) {}

  rpc DSProofRet (DSProofRetRequest) returns (DSProofRetResponse) {}

  rpc StartLogres (StartLogresRequest) returns (StartLogresResponse) {}

  rpc LogresValue (LogresValueRequest) returns (LogresValueResponse) {}
}

message StartLogresRequest {
	string NumR = 1;
}

message StartLogresResponse {
	string Res = 1;
}


message LogresValueRequest {
	bytes Msg = 1;
}

message LogresValueResponse {
	string Res = 1;
}

message PreLoggingRequest {
	bytes Prl = 1;
}

message PreLoggingResponse {
	bytes Att = 1;
}

message LoggingRequest {
	bytes Lreq = 1;
}

message LoggingResponse {
	bytes LogConf = 1;
}

message DSProofRetRequest {
	string Parentzone = 1;
	string Childzone = 2;
}

message DSProofRetResponse {
	bytes DSPBytes = 1;
}

message Lwit {
	repeated string DesignatedLogs = 1;
	string Log = 2;
	bytes NdsHash = 3;
	bytes Sig = 4;
	bytes Data = 5;
}

message Acfm {
	string AggIdent = 1;
	bytes NdsHash = 2;
	bytes DSum = 3;
}

message RetrieveDSALogRequest {
	repeated string RequestedZones = 1;
}

message RetrieveDSALogResponse {
	repeated bytes DSAPayload = 1;
	repeated bytes DSASignatures = 2;
}


message SubmitNDSRequest {
	bytes Nds = 1;
	repeated Lwit Lwits = 2;
	bytes Rid = 3;
	bytes Rcertp = 4;
	bytes Acsrpayload = 5;
	bytes Acsrsignature = 6;
}

message SubmitNDSResponse {
	bytes Acfmg = 1;
	bytes Rid = 2;
}

